using Microsoft.AspNetCore.Mvc;
using HotelWebsite.Models;
using HotelWebsite.Services;
using System.Text.Json;

namespace HotelWebsite.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class BookingController : ControllerBase
    {
        private readonly TelegramService _telegramService;
        private readonly string _chatId;

        public BookingController()
        {
            // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ @getmyid_bot)
            _chatId = "–í–ê–®_CHAT_ID";
            _telegramService = new TelegramService("8107760506:AAHspBy8Oq3T3EwOGbFC32QqcQMojKtgLcA");
        }

        [HttpPost]
        public async Task<IActionResult> CreateBooking([FromBody] BookingRequest request)
        {
            try
            {
                var message = $@"üöÄ <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï</b>

üë§ <b>–ò–º—è:</b> {request.Name}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {request.Phone}
üìß <b>Email:</b> {request.Email}
üè® <b>–ù–æ–º–µ—Ä:</b> {request.RoomType}
üìÖ <b>–ó–∞–µ–∑–¥:</b> {request.Checkin}
üìÖ <b>–í—ã–µ–∑–¥:</b> {request.Checkout}
üë• <b>–ì–æ—Å—Ç–µ–π:</b> {request.Guests}
üí¨ <b>–ü–æ–∂–µ–ª–∞–Ω–∏—è:</b> {request.Message}";

                var success = await _telegramService.SendMessageAsync(_chatId, message);

                if (success)
                {
                    return Ok(new { success = true, message = "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞" });
                }
                else
                {
                    return StatusCode(500, new { success = false, message = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram" });
                }
            }
            catch (Exception ex)
            {
                return StatusCode(500, new { success = false, message = $"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {ex.Message}" });
            }
        }
    }
}